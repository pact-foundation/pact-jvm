plugins {
    id 'au.com.dius.pact.kotlin-library-conventions'
}

description = 'Pact-JVM - Pact Models'
group = 'au.com.dius.pact.core'

dependencies {
    api project(":core:support")
    api project(":core:pactbroker")
    api 'org.apache.tika:tika-core'

    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.commons:commons-collections4'
    implementation 'commons-codec:commons-codec'
    implementation 'org.slf4j:slf4j-api'
    implementation 'javax.mail:mail:1.5.0-b01'
    implementation 'io.ktor:ktor-http-jvm'
    implementation 'commons-beanutils:commons-beanutils:1.10.1'

    testImplementation 'org.apache.groovy:groovy'
    testImplementation 'org.apache.groovy:groovy-json'
    testImplementation 'org.apache.groovy:groovy-datetime'
    testImplementation 'org.spockframework:spock-core'
    testImplementation 'ch.qos.logback:logback-classic'
    testRuntimeOnly 'net.bytebuddy:byte-buddy'
    testImplementation 'io.github.http-builder-ng:http-builder-ng-apache:1.0.4'
    testRuntimeOnly project(path: project.path, configuration: 'testJars')
    testImplementation 'com.amazonaws:aws-java-sdk-s3:1.12.783'
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.4.2'
    testImplementation 'junit:junit'
    testImplementation 'org.hamcrest:hamcrest:3.0'
}

task pactsJar(type: Jar, dependsOn: testClasses) {
    archiveClassifier = 'test-pacts'
    into('jar-pacts') {
        from(sourceSets.test.output) {
            include 'test_pact_v3.json'
        }
    }
}

configurations {
    testJars
}

artifacts {
    testJars pactsJar
}
